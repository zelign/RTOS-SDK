diff --git a/Kconfig b/Kconfig
index e3b92d9..4611130 100755
--- a/Kconfig
+++ b/Kconfig
@@ -21,8 +21,32 @@ source "lib/Kconfig"
 endmenu
 
 menu "Compile Options"
-config MCPU
+config CPU
     string
     default "-mcpu=cortex-m4" if Cortex_M4
     default "-mcpu=cortex-m3" if Cortex_M3
-endmenu
+config FPU
+    string
+    default "-mfpu=fpv4-sp-d16" if Cortex_M4
+
+config FLOAT_ABI
+    string
+    default "-mfloat-abi=hard" if Cortex_M4
+config INSTRCTION_SET
+    string
+    default "-mthumb" if Cortex_M4 || Cortex_M3
+choice
+    prompt "Whether use standard libraries"
+    default NO_STD_LIBS
+
+config USE_STD_LIBS
+    bool "YES"
+
+config NO_STD_LIBS
+    bool "No"
+
+endchoice
+config STD_LIBS
+    string
+    default "-nostdlib" if NO_STD_LIBS
+endmenu
\ No newline at end of file
diff --git a/Makefile b/Makefile
index 3059fcb..ffabf77 100755
--- a/Makefile
+++ b/Makefile
@@ -3,7 +3,7 @@
 # SPDX-License-Identifier: MIT
 
 #NOTE: The Makefile will create a directory for toolchain, and the executation procedure
-#is top makefile(build)->build.sh->top makefile(build_obj_first)->arch makefile->board make file->...->
+#is top makefile(all)->build.sh->top makefile(build)->arch makefile->board make file->...->
 #product makefile->top makefile(link all object files)
 #====================================================================#
 #These variables are need to export to environment virable by build.sh:
@@ -38,7 +38,7 @@ BASH_COMPILE = echo "$(TERM_BOLD)Compiler:$(1)$(TERM_RESERT)"
 MESSAGE = echo "$(TERM_BOLD)>>> $(1)$(TERM_RESERT) "
 TERM_BOLD := $(shell tput smso 2>/dev/null)
 TERM_RESERT := $(shell tput rmso 2>/dev/null)
-Q = @
+export Q = @
 
 #define wrap options
 WRAP = 0
@@ -64,13 +64,14 @@ SZ = $(COMPILER)-size
 DP = $(COMPILER)-objdump
 LD = $(COMPILER)-ld
 
-CPU_PARA = -mcpu=cortex-m4
-FPU_PARA = -mfpu=fpv4-sp-d16
-FLOAT_ABI = -mfloat-abi=hard
+-include $(CURDIR)/output/.config
+
+CPU = $(subst ",,$(CONFIG_CPU))
+FPU = $(subst ",,$(CONFIG_FPU))
+FLOAT_ABI = $(subst ",,$(CONFIG_FLOAT_ABI))
+INSTRCTION_SET = $(subst ",,$(CONFIG_INSTRCTION_SET))
 #if use FLOAT_ABI, there will occur error during compiling.
-MCU_PARA = $(CPU_PARA) -mthumb $(FPU_PARA) $(FLOAT_ABI)
-LIB_DIR = -v
-LIBS = -nostdlib
+ARCH_PARA = $(CPU) $(INSTRCTION_SET) $(FPU) $(FLOAT_ABI)
 
 #These parameters can be passed by the script file "build.sh", so
 #they are have no value before implement the command `make build`.
@@ -81,8 +82,8 @@ ELF_FILE = $(BUILD_OUT_PACKAGE)/$(BOARDS)-$(MCUS).elf
 HEX_FILE = $(BUILD_OUT_PACKAGE)/$(BOARDS)-$(MCUS).hex
 LST_FILE = $(BUILD_OUT_PACKAGE)/$(BOARDS)-$(MCUS).lst
 
-LD_OPTION = $(MCU_PARA) -T$(LD_SCRIPT) $(LIBS) $(LIB_DIR) -Wl,-Map=$(BUILD_OUT_PACKAGE)/$(BOARDS)-$(MCUS).map,--cref,--gc-sections $(WRAP_FLAGS)
-export CC AS CP SZ DP MCU_PARA ELF_FILE HEX_FILE LST_FILE LD_OPTION PRJ_ROOT_DIR
+LD_OPTION := -T$(LD_SCRIPT) -Wl,-Map=$(BUILD_OUT_PACKAGE)/$(BOARDS)-$(MCUS).map,--cref,--gc-sections $(WRAP_FLAGS)
+export CC AS CP SZ DP ARCH_PARA ELF_FILE HEX_FILE LST_FILE LD_OPTION PRJ_ROOT_DIR
 CROSS_COMPILER := $(TOOLCHAIN_SRC)/$(COMPILER)*$(COMPILER_KEYWORD)
 
 #####################################################################
@@ -153,31 +154,31 @@ $(foreach line,$(CFG_FILE_LINE),$(eval $(call process_line,$(line))))
 $(foreach line,$(DRV_CFG),$(eval $(call up_to_low,$(line))))
 $(foreach line,$(LOW_CFG),$(eval $(call get_find_dir, $(line))))
 
-DRV_C_SRC_INCLUDES += $(DRV_INCLUDES) \
-					-I$(PRJ_ROOT_DIR)/boards/$(ARCHS)/$(BOARDS) \
-					-I$(PRJ_ROOT_DIR)/boards/$(ARCHS)/$(BOARDS)/$(MCUS) \
-					-I$(PRJ_ROOT_DIR)/lib/include \
-					-I$(PRJ_ROOT_DIR)/arch/$(ARCHS)/include \
-					-I$(PRJ_ROOT_DIR)/arch/$(ARCHS)/cortex-M4 \
-					-I$(PRJ_ROOT_DIR)/lib/FreeRTOS_CLI \
-					-I$(PRJ_ROOT_DIR)/kernel/FreeRTOS/include \
-					-I$(PRJ_ROOT_DIR)/boards/$(ARCHS)/$(BOARDS) \
-					-I$(PRJ_ROOT_DIR)/kernel/FreeRTOS/portable/GCC/ARM_CM4F
-
-DRV_FLAGS += $(MCU_PARA) $(C_DEFS) $(DRV_C_SRC_INCLUDES) -Wall -fdata-sections -ffunction-sections -fno-builtin-printf \
--fno-builtin-malloc -fno-builtin-free -fno-builtin-memset -fno-builtin-memcpy -fno-builtin-memcmp -O2
-C_FLAGS := $(DRV_FLAGS)
-export C_FLAGS DRV_FIND_DIR DRV_FLAGS DRV_INCLUDES
+INCLUDE_DIRS += $(DRV_INCLUDES) \
+				-I$(PRJ_ROOT_DIR)/boards/$(ARCHS)/$(BOARDS) \
+				-I$(PRJ_ROOT_DIR)/boards/$(ARCHS)/$(BOARDS)/$(MCUS) \
+				-I$(PRJ_ROOT_DIR)/lib/include \
+				-I$(PRJ_ROOT_DIR)/arch/$(ARCHS)/include \
+				-I$(PRJ_ROOT_DIR)/arch/$(ARCHS)/$(subst ",,$(CONFIG_CHIP_ARCH)) \
+				-I$(PRJ_ROOT_DIR)/lib/$(subst ",,$(CONFIG_CLI)) \
+				-I$(PRJ_ROOT_DIR)/kernel/$(subst ",,$(CONFIG_KERNEL))/include \
+				-I$(PRJ_ROOT_DIR)/output \
+
+ifeq ($(CONFIG_KERNEL), "FreeRTOS")
+INCLUDE_DIRS += -I$(PRJ_ROOT_DIR)/kernel/FreeRTOS/portable/GCC/$(subst ",,$(CONFIG_FREERTOS_PORT))
+endif
+
+C_FLAGS += $(INCLUDE_DIRS) -Wall -fdata-sections -ffunction-sections -fno-builtin-printf \
+-fno-builtin-malloc -fno-builtin-free -fno-builtin-memset -fno-builtin-memcpy -fno-builtin-memcmp -O2 $(ARCH_PARA)
+export C_FLAGS DRV_FIND_DIR
 
 #sub Makefile, and the execution sequence is determined by the variable.
-BUILD_OBJ_DIR := $(CURDIR)/arch $(CURDIR)/drivers $(DRV_FIND_DIR) $(CURDIR)/boards $(CURDIR)/kernel/FreeRTOS $(CURDIR)/lib $(CURDIR)/products/$(PRODUCTS)
+BUILD_OBJ_DIR := $(CURDIR)/arch $(CURDIR)/drivers $(CURDIR)/boards $(CURDIR)/kernel/FreeRTOS $(CURDIR)/lib $(CURDIR)/products/$(PRODUCTS)
 endif #DO_BUILD_SH
 #----------------------parameters init over ---------------------------------#
 
 # Main targets
-all: build_obj_first
-
-build:
+all: menuconfig
 	$(Q) $(call BASH_COMPILE, "arm-none-eabi-gcc")
 	$(Q) ./scripts/build.sh
 
@@ -203,7 +204,7 @@ config.h:
 	$(foreach line,$(DRV_CFG),$(call config_h, $(line)))
 	$(call config_h_end)
 
-build_obj_first: autoconfig.h config.mk config.h $(BUILD_OBJ_DIR)
+build: config.mk $(BUILD_OBJ_DIR)
 
 clean:
 	$(Q) rm -v $(OUTPUT_DIR)/.config* $(OUTPUT_DIR)/autoconfig* $(OUTPUT_DIR)/source.txt
@@ -218,8 +219,10 @@ export KCONFIG_CONFIG := $(AUCOCONFIG_DIR).config
 
 menuconfig:
 	$(Q) python3 ./scripts/menuconfig.py
+	$(Q) python3 ./scripts/kconfig.py $(CURDIR)/Kconfig  $(AUCOCONFIG_DIR).config \
+	$(AUCOCONFIG_DIR)autoconfig.h $(AUCOCONFIG_DIR)source.txt $(AUCOCONFIG_DIR).config
 
-autoconfig.h: menuconfig
+autoconfig.h:
 	$(Q) python3 ./scripts/kconfig.py $(CURDIR)/Kconfig  $(AUCOCONFIG_DIR).config \
 	$(AUCOCONFIG_DIR)autoconfig.h $(AUCOCONFIG_DIR)source.txt $(AUCOCONFIG_DIR).config
 
diff --git a/arch/Kconfig b/arch/Kconfig
index 80cdfe0..ef246ad 100755
--- a/arch/Kconfig
+++ b/arch/Kconfig
@@ -21,8 +21,8 @@ endchoice
 
 config CHIP_ARCH
 	string
-    default "Cortex-M3" if Cortex_M3
-    default "Cortex-M4" if Cortex_M4
+    default "cortex-M3" if Cortex_M3
+    default "cortex-M4" if Cortex_M4
 	help
 	  Select the ARM Core architecture.
 
@@ -45,8 +45,8 @@ endchoice
 
 config CHIP_ARCH
 	string
-    default "Cortex-A35" if Cortex_A35
-    default "Cortex-A75" if Cortex_A75
+    default "cortex-A35" if Cortex_A35
+    default "cortex-A75" if Cortex_A75
 	help
 	  Select the ARM64 Core architecture.
 endif
diff --git a/arch/Makefile b/arch/Makefile
index 534a570..84cf529 100755
--- a/arch/Makefile
+++ b/arch/Makefile
@@ -13,6 +13,7 @@ include $(PRJ_ROOT_DIR)/scripts/fonts_color.mk
 
 ifeq ($(USE_KCONFIG), yes)
 include $(PRJ_ROOT_DIR)/output/.config
+include $(BUILD_OUT)/config.mk
 else
 include $(BUILD_OUT)/config.mk
 ARCH_CORE :=
@@ -25,21 +26,6 @@ ARCH_DIR := $(PWD)
 ARCH_DIR_SINGLE := $(shell basename $(ARCH_DIR))
 Q := @
 
-#define compiler related parameters
-C_DEFS =
-
-#define where to find the header files, it will increased as needed in future.
-C_INCLUDES = -I$(PRJ_ROOT_DIR)/lib/include \
-			-I$(PRJ_ROOT_DIR)/boards/$(ARCHS)/$(BOARDS)/$(MCUS) \
-			-I$(PRJ_ROOT_DIR)/boards/$(ARCHS)/$(BOARDS) \
-			-I$(PRJ_ROOT_DIR)/arch/$(ARCHS)/$(ARCH_CORE) \
-			-I$(PRJ_ROOT_DIR)/arch/$(ARCHS)/include \
-			-I$(PRJ_ROOT_DIR)/drivers/clock \
-			-I$(PRJ_ROOT_DIR)/kernel/FreeRTOS/include \
-			-I$(PRJ_ROOT_DIR)/kernel/FreeRTOS/portable/GCC/ARM_CM4F
-
-C_FLAGS += $(MCU_PARA) $(C_DEFS) $(C_INCLUDES) -Og -Wall -fdata-sections -ffunction-sections
-
 #define object file related variable
 ARCH_ASM_FILE := $(wildcard $(ARCH_DIR)/$(ARCHS)/*.s)
 ARCH_C_FILE := $(wildcard $(ARCH_DIR)/$(ARCHS)/*.c)
@@ -52,8 +38,6 @@ ARCH_ASM_OBJ := $(addprefix $(ARCH_OBJ_DIR)/, $(notdir $(ARCH_ASM_FILE:.s=.o)))
 BUILD_SOURCE += $(ARCH_ASM_OBJ)
 BUILD_SOURCE += $(ARCH_OBJ)
 
-
-$(warning "MCU_PARA $(MCU_PARA)")
 all: info $(ARCH_ASM_OBJ) $(ARCH_OBJ)
 	@ echo "BUILD_SOURCE := $(BUILD_SOURCE)" >> $(BUILD_OUT)/config.mk
 	@ echo -e "$(GREEN)Compile ${notdir $(ARCH_OBJ)} OK$(END)"
diff --git a/boards/Kconfig b/boards/Kconfig
index f50ee97..9da04ba 100755
--- a/boards/Kconfig
+++ b/boards/Kconfig
@@ -12,6 +12,7 @@ if STM32
 if Cortex_M3
 choice
 	prompt "Stm32 Cortex-M3 series boards"
+	default F103_ZGT6
 
 config F103_ZET6
 	bool "Stm32F103ZET6 support"
@@ -32,6 +33,7 @@ endif #endif Cortex_M3
 if Cortex_M4
 choice
 	prompt "Stm32 Cortex-M4 series boards"
+	default F407_ZGT6
 
 config F407_ZET6
 	bool "Stm32F407ZET6 support"
diff --git a/boards/Makefile b/boards/Makefile
index 158c519..11142ed 100755
--- a/boards/Makefile
+++ b/boards/Makefile
@@ -12,21 +12,6 @@ include $(PRJ_ROOT_DIR)/scripts/fonts_color.mk
 BOARD_SRC_FILE := $(wildcard $(BOARD_DIR)/$(ARCHS)/$(BOARDS)/*.c)
 BOARD_C_OBJ := $(addprefix $(BOARD_BUILD_DIR)/, $(notdir $(BOARD_SRC_FILE:.c=.o)))
 
-# Copyright (c) 2021-2022 Simon. All rights reserved.
-
-# SPDX-License-Identifier: MIT
-
-#define compiler related
-C_DEFS :=
-C_INCLUDES := -I$(BOARD_DIR)/$(ARCHS)/$(BOARDS)/$(MCUS) \
-			  -I$(BOARD_DIR)/$(ARCHS)/$(BOARDS) \
-			  -I$(PRJ_ROOT_DIR)/lib/include \
-			  -I$(PRJ_ROOT_DIR)/arch/$(ARCHS)/include \
-			  -I$(PRJ_ROOT_DIR)/arch/$(ARCHS)/cortex-M4 \
-			  -I$(PRJ_ROOT_DIR)/drivers/led \
-			  -I$(PRJ_ROOT_DIR)/drivers/gpio \
-
-C_FLAGS += $(MCU_PARA) $(C_DEFS) $(C_INCLUDES) -Og -Wall -fdata-sections -ffunction-sections
 BUILD_SOURCE += $(BOARD_C_OBJ)
 
 all: info $(BOARD_C_OBJ)
diff --git a/drivers/Makefile b/drivers/Makefile
index 675d7b1..13dbf95 100755
--- a/drivers/Makefile
+++ b/drivers/Makefile
@@ -3,10 +3,34 @@
 # SPDX-License-Identifier: MIT
 
 include $(PRJ_ROOT_DIR)/scripts/fonts_color.mk
-
+include $(PRJ_ROOT_DIR)/output/.config
 SHELL := /bin/bash
 PWD := $(shell pwd)
 DRV_DIR_SINGLE := $(shell basename $(PWD))
+DRV_DIR = clock usart gpio
+
+ifeq ($(CONFIG_KEY), y)
+DRV_DIR += key
+endif
+
+ifeq ($(CONFIG_LED), y)
+DRV_DIR += led
+endif
+
+ifeq ($(CONFIG_SPI), y)
+DRV_DIR += spi
+endif
+
+ifeq ($(or $(CONFIG_NOR_FLASH), $(CONFIG_NAND_FLASH)),y)
+DRV_DIR += flash
+endif
+
+$(DRV_DIR):
+	$(Q) $(MAKE) all -C $@
+
+all: info $(DRV_DIR)
+
+info:
+	$(Q) echo -e "$(YELLOW)$(BOLD)[5] INTO $(UNDERLINE)$(DRV_DIR_SINGLE)$(END) $(YELLOW)$(BOLD)COMPILE...$(END)"
 
-all:
-	@ echo -e "$(YELLOW)$(BOLD)[5] INTO $(UNDERLINE)$(DRV_DIR_SINGLE)$(END) $(YELLOW)$(BOLD)COMPILE...$(END)"
+.PHONY: $(DRV_DIR)
\ No newline at end of file
diff --git a/drivers/clock/Makefile b/drivers/clock/Makefile
index e9fe5dc..c49f7e5 100755
--- a/drivers/clock/Makefile
+++ b/drivers/clock/Makefile
@@ -17,4 +17,4 @@ all: $(CLOCK_OBJ_FILE)
 	@ echo "BUILD_SOURCE := $(BUILD_SOURCE)" >> $(BUILD_OUT)/config.mk
 	@ echo -e "$(GREEN)Compile ${notdir $(CLOCK_OBJ_FILE)} OK$(END)"
 $(CLOCK_OBJ_FILE): $(CLOCK_C_FILE)
-	@ $(CC) $(DRV_FLAGS) -c $< -o $@
\ No newline at end of file
+	@ $(CC) $(C_FLAGS) -c $< -o $@
\ No newline at end of file
diff --git a/drivers/clock/clock.c b/drivers/clock/clock.c
index a9df9f1..f2fefac 100755
--- a/drivers/clock/clock.c
+++ b/drivers/clock/clock.c
@@ -6,7 +6,7 @@
 
 #include "clock.h"
 #include "initcall.h"
-#include "../../output/config.h"
+#include "autoconfig.h"
 
 /* This definition will be used to identify the clock source */
 #define HSE_CLK 1
diff --git a/drivers/flash/Makefile b/drivers/flash/Makefile
index 944bfd6..0f8d7d3 100755
--- a/drivers/flash/Makefile
+++ b/drivers/flash/Makefile
@@ -15,4 +15,4 @@ all: $(FLASH_OBJ_FILE)
 	@ echo "$(GREEN)Compile ${notdir $(FLASH_OBJ_FILE)} OK$(END)"
 
 $(FLASH_OBJ_FILE): $(FLASH_C_FILE)
-	@ $(CC) $(DRV_FLAGS) -c $< -o $@
\ No newline at end of file
+	@ $(CC) $(C_FLAGS) -c $< -o $@
\ No newline at end of file
diff --git a/drivers/flash/flash.h b/drivers/flash/flash.h
index 4accd8a..59541ae 100755
--- a/drivers/flash/flash.h
+++ b/drivers/flash/flash.h
@@ -3,7 +3,7 @@
 
 #include "system.h"
 #include "board_init.h"
-#include "../../output/config.h"
+#include "autoconfig.h"
 #include "spi.h"
 #include "gpio.h"
 
diff --git a/drivers/gpio/Makefile b/drivers/gpio/Makefile
index fe7866c..2c1d31b 100755
--- a/drivers/gpio/Makefile
+++ b/drivers/gpio/Makefile
@@ -15,4 +15,4 @@ all: $(GPIO_OBJ_FILE)
 	@ echo "$(GREEN)Compile ${notdir $(GPIO_OBJ_FILE)} OK$(END)"
 
 $(GPIO_OBJ_FILE): $(GPIO_C_FILE)
-	@ $(CC) $(DRV_FLAGS) -c $< -o $@
\ No newline at end of file
+	@ $(CC) $(C_FLAGS) -c $< -o $@
\ No newline at end of file
diff --git a/drivers/key/Makefile b/drivers/key/Makefile
index f4027b8..ee1ae2d 100755
--- a/drivers/key/Makefile
+++ b/drivers/key/Makefile
@@ -16,4 +16,4 @@ all: $(KEY_OBJ_FILE)
 	@ echo "$(GREEN)Compile ${notdir $(KEY_OBJ_FILE)} OK$(END)"
 
 $(KEY_OBJ_FILE): $(KEY_C_FILE)
-	@ $(CC) $(DRV_FLAGS) -c $< -o $@
\ No newline at end of file
+	@ $(CC) $(C_FLAGS) -c $< -o $@
\ No newline at end of file
diff --git a/drivers/led/Makefile b/drivers/led/Makefile
index 6c5fcd5..a5a80e9 100755
--- a/drivers/led/Makefile
+++ b/drivers/led/Makefile
@@ -16,4 +16,4 @@ all: $(LED_OBJ_FILE)
 	@ echo "$(GREEN)Compile ${notdir $(LED_OBJ_FILE)} OK$(END)"
 
 $(LED_OBJ_FILE): $(LED_C_FILE)
-	@ $(CC) $(DRV_FLAGS) -c $< -o $@
\ No newline at end of file
+	@ $(CC) $(C_FLAGS) -c $< -o $@
\ No newline at end of file
diff --git a/drivers/spi/Makefile b/drivers/spi/Makefile
index d9f7e00..7cbcabb 100755
--- a/drivers/spi/Makefile
+++ b/drivers/spi/Makefile
@@ -15,4 +15,4 @@ all: $(SPI_OBJ_FILE)
 	@ echo "$(GREEN)Compile ${notdir $(SPI_OBJ_FILE)} OK$(END)"
 
 $(SPI_OBJ_FILE): $(SPI_C_FILE)
-	@ $(CC) $(DRV_FLAGS) -c $< -o $@
\ No newline at end of file
+	@ $(CC) $(C_FLAGS) -c $< -o $@
\ No newline at end of file
diff --git a/drivers/spi/spi.h b/drivers/spi/spi.h
index 98e0b4f..58bac52 100755
--- a/drivers/spi/spi.h
+++ b/drivers/spi/spi.h
@@ -3,7 +3,7 @@
 
 #include "system.h"
 #include "board_init.h"
-#include "../../output/config.h"
+#include "autoconfig.h"
 #include "gpio.h"
 
 #define SPI_CRCPR_Default                           0x7
diff --git a/drivers/usart/Makefile b/drivers/usart/Makefile
index 5486980..c846a68 100755
--- a/drivers/usart/Makefile
+++ b/drivers/usart/Makefile
@@ -16,4 +16,4 @@ all: $(USART_OBJ_FILE)
 	@ echo "$(GREEN)Compile ${notdir $(USART_OBJ_FILE)} OK$(END)"
 
 $(USART_OBJ_FILE): $(USART_C_FILE)
-	@ $(CC) $(DRV_FLAGS) -c $< -o $@
\ No newline at end of file
+	@ $(CC) $(C_FLAGS) -c $< -o $@
\ No newline at end of file
diff --git a/drivers/usart/usart.c b/drivers/usart/usart.c
index b3abebf..3d0007f 100755
--- a/drivers/usart/usart.c
+++ b/drivers/usart/usart.c
@@ -9,7 +9,7 @@
 #include "gpio.h"
 #include "led.h"
 #include "system.h"
-#include "../../output/config.h"
+#include "autoconfig.h"
 
 #define RECEIVE_SIZE 128
 // #define ENABLE_USART1_INT 1
diff --git a/kernel/FreeRTOS/Makefile b/kernel/FreeRTOS/Makefile
index c21799a..860c335 100644
--- a/kernel/FreeRTOS/Makefile
+++ b/kernel/FreeRTOS/Makefile
@@ -3,7 +3,7 @@
 # SPDX-License-Identifier: MIT
 include $(PRJ_ROOT_DIR)/scripts/fonts_color.mk
 include $(BUILD_OUT)/config.mk
-include $(PRJ_ROOT_DIR)/output/config.h
+include $(PRJ_ROOT_DIR)/output/.config
 
 SHELL := /bin/bash
 PWD := $(shell pwd)
@@ -13,17 +13,6 @@ KERNEL_DIR_SINGLE := $(shell basename $(KERNEL_DIR))
 
 Q := @
 
-#define compiler related parameters
-C_DEFS =
-
-#define where to find the header files, it will increased as needed in future.
-C_INCLUDES = -I$(PRJ_ROOT_DIR)/lib/include \
-			 -I$(KERNEL_DIR)/include \
-			 -I$(PRJ_ROOT_DIR)/boards/$(ARCHS)/$(BOARDS)/ \
-			 -I$(KERNEL_DIR)/portable/GCC/ARM_CM4F
-
-C_FLAGS += $(MCU_PARA) $(C_DEFS) $(C_INCLUDES) -Og -Wall -fdata-sections -ffunction-sections
-
 #define object file related variable
 KERNEL_ASM_FILE := $(wildcard $(KERNEL_DIR)/*.s)
 KERNEL_C_FILE := $(wildcard $(KERNEL_DIR)/*.c)
diff --git a/kernel/Kconfig b/kernel/Kconfig
index 758c2ff..53aba9f 100644
--- a/kernel/Kconfig
+++ b/kernel/Kconfig
@@ -15,6 +15,12 @@ config RT_THREAD
 
 endchoice
 
+if FREERTOS
+config FREERTOS_PORT
+    string
+    default "ARM_CM4F" if Cortex_M4
+endif
+
 config KERNEL
     string
     default "FreeRTOS" if FREERTOS
diff --git a/lib/FreeRTOS_CLI/cli.c b/lib/FreeRTOS_CLI/cli.c
index 9f12091..339c114 100755
--- a/lib/FreeRTOS_CLI/cli.c
+++ b/lib/FreeRTOS_CLI/cli.c
@@ -11,8 +11,7 @@
 
 /* Utils includes. */
 #include "FreeRTOS_CLI.h"
-
-#include "../../output/config.h"
+#include "autoconfig.h"
 
 #define RED_LOG "\033[1;31m%s\033[0m"
 #define GREEN_LOG "\033[1;32m%s\033[0m"
diff --git a/lib/Kconfig b/lib/Kconfig
index 69725bf..b5f65c8 100755
--- a/lib/Kconfig
+++ b/lib/Kconfig
@@ -1,11 +1,13 @@
 
 config CLI_LIB
     bool "Command line support"
+    default y
 
 if CLI_LIB
 
 choice
     prompt "Cli Selection"
+    default FREERTOS_CLI
 config FREERTOS_CLI
     bool "FreeRTOS provide cli"
 config LINUX_CLI
@@ -13,7 +15,7 @@ config LINUX_CLI
 endchoice
 config CLI
     string
-    default "FREERTOS_CLI" if FREERTOS_CLI
+    default "FreeRTOS_CLI" if FREERTOS_CLI
     default "Linux_CLI" if LINUX_CLI
     help
       CLI name
diff --git a/lib/Makefile b/lib/Makefile
index 84b8c25..f87e1f8 100644
--- a/lib/Makefile
+++ b/lib/Makefile
@@ -14,18 +14,6 @@ LIB_DIR_SINGLE := $(shell basename $(LIB_DIR))
 
 Q := @
 
-#define compiler related parameters
-C_DEFS =
-
-#define where to find the header files, it will increased as needed in future.
-C_INCLUDES = -I$(PRJ_ROOT_DIR)/lib/include \
-			 -I$(LIB_DIR) \
-			 -I$(PRJ_ROOT_DIR)/boards/$(ARCHS)/$(BOARDS) \
-			 -I$(PRJ_ROOT_DIR)/kernel/FreeRTOS/include \
-			 -I$(PRJ_ROOT_DIR)/kernel/FreeRTOS/portable/GCC/ARM_CM4F
-
-C_FLAGS += $(MCU_PARA) $(C_DEFS) $(C_INCLUDES) -Og -Wall -fdata-sections -ffunction-sections
-
 #define object file related variable
 SM_LIB_C_FILE := $(wildcard $(SM_LIB_DIR)/*.c)
 SM_LIB_S_FILE := $(wildcard $(SM_LIB_DIR)/*.S)
diff --git a/products/demo/Makefile b/products/demo/Makefile
index dcf83d1..8218bef 100755
--- a/products/demo/Makefile
+++ b/products/demo/Makefile
@@ -16,22 +16,10 @@ DEMO_SRC_FILE := $(wildcard $(DEMO_DIR)/*.c)
 
 BUILD_SOURCE += $(BUILD_OUT)/main.o
 
-C_DEFS :=
-C_INCLUDES := -I$(INCLUDE_DIR) \
-			  -I$(PRJ_ROOT_DIR)/boards/$(ARCHS)/$(BOARDS) \
-			  -I$(PRJ_ROOT_DIR)/arch/$(ARCHS)/include \
-			  -I$(PRJ_ROOT_DIR)/boards/$(ARCHS)/$(BOARDS)/$(MCUS) \
-			  -I$(PRJ_ROOT_DIR)/lib/include \
-			  -I$(PRJ_ROOT_DIR)/arch/$(ARCHS)/cortex-M4 \
-			  -I$(PRJ_ROOT_DIR)/kernel/FreeRTOS \
-			  -I$(PRJ_ROOT_DIR)/kernel/FreeRTOS/include \
-			  -I$(PRJ_ROOT_DIR)/kernel/FreeRTOS/portable/GCC/ARM_CM4F \
-			  -I$(DRV_INCLUDES) \
-			  -I$(PRJ_ROOT_DIR)/output
-
-C_FLAGS += $(MCU_PARA) $(C_DEFS) $(C_INCLUDES) -Og -Wall -fdata-sections -ffunction-sections
 DEMO_OBJ_DIR := $(BUILD_OUT)
 DEMO_C_OBJ := $(addprefix $(DEMO_OBJ_DIR)/, $(notdir $(DEMO_SRC_FILE:.c=.o)))
+LIBS = -nostdlib -v
+LD_OPTION += $(LIBS)
 
 all: info build_obj
 
diff --git a/products/demo/main.c b/products/demo/main.c
index bd9fcb8..7446cfa 100644
--- a/products/demo/main.c
+++ b/products/demo/main.c
@@ -12,7 +12,7 @@
 #include "nvic.h"
 #include "exti.h"
 #include "usart.h"
-#include "../output/config.h"
+#include "autoconfig.h"
 #include "FreeRTOS.h"
 #include "spi.h"
 #include "task.h"
diff --git a/scripts/build.sh b/scripts/build.sh
index dcc41d3..1288601 100755
--- a/scripts/build.sh
+++ b/scripts/build.sh
@@ -18,7 +18,7 @@ function build_all() {
 	print_bold YELLOW "[3] START BUILD $BOARDS-$MCUS"
 
 	if [ -n "BUILD_START" ]; then
-		make --no-print-directory
+		make build --no-print-directory
 	else
 		echo -e "$BOLD$RED Have not find ${BUILD_PRJ_DIR}/board/$ARCHS/$MAKE file!**$END"
 		exit
